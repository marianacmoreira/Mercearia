
import java.util.Vector;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Mariana
 */
public class Compra extends javax.swing.JPanel {

    //armazena temporariamente o produto selecionado no ato da busca
    private Produto produtoSelecionado;
    private ModeloTabelaCompra carrinhoComprasTab;
    private double precoCompra;
    /**
     * Creates new form Compra
     */
    public Compra() {
        initComponents();
        precoCompra = 0.0;
        meuInitComponents();
    }
    
    private void meuInitComponents(){
        this.carrinhoComprasTab = new ModeloTabelaCompra(this);
        
        //criar a conexão dos dados (comportamento) do objeto da classe com a tabela GUI
        tabelaCarrinho.setModel(carrinhoComprasTab);
        
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botaoFinalizar = new javax.swing.JButton();
        botaoEstoque = new javax.swing.JButton();
        botaoRemover = new javax.swing.JButton();
        codigo = new javax.swing.JTextField();
        nome = new javax.swing.JTextField();
        quantidade = new javax.swing.JTextField();
        precouni = new javax.swing.JTextField();
        precototal = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCarrinho = new javax.swing.JTable();
        botaoAddProduto = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        botaoFinalizar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botaoFinalizar.setText("Finalizar");
        botaoFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFinalizarActionPerformed(evt);
            }
        });

        botaoEstoque.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botaoEstoque.setText("Estoque");

        botaoRemover.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botaoRemover.setText("Remover");
        botaoRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRemoverActionPerformed(evt);
            }
        });

        codigo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoActionPerformed(evt);
            }
        });
        codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                codigoKeyTyped(evt);
            }
        });

        nome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nome.setEnabled(false);

        quantidade.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        quantidade.setText("1");
        quantidade.setEnabled(false);
        quantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantidadeKeyReleased(evt);
            }
        });

        precouni.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        precouni.setEnabled(false);
        precouni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precouniActionPerformed(evt);
            }
        });

        precototal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        precototal.setText("R$ 0,00");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Código");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Nome");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Quantidade");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Preço Parcial");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Valor Total:");

        tabelaCarrinho.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        tabelaCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Preço", "Quantidade", "Total Parcial"
            }
        ));
        jScrollPane1.setViewportView(tabelaCarrinho);

        botaoAddProduto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botaoAddProduto.setText("Add Produto");
        botaoAddProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAddProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoFinalizar)
                        .addGap(58, 58, 58)
                        .addComponent(botaoEstoque))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2)
                                        .addComponent(codigo, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                        .addComponent(nome))
                                    .addComponent(precouni, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(botaoAddProduto)))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(precototal, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(botaoRemover)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(precouni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(botaoAddProduto))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(botaoRemover)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(precototal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoEstoque)
                    .addComponent(botaoFinalizar))
                .addGap(27, 27, 27))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoActionPerformed

    private void codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoKeyTyped
        // TODO add your handling code here:
        
        //Se tecla Enter pressionada
        if(evt.getKeyChar() == '\n'){
            
        //avaliando se existe informação no campo do código
        if(!codigo.getText().isEmpty());
            try{
                //avaliamos se o dado informadoo é numérico
                int cod = Integer.parseInt(codigo.getText());
                
                //efetuamos a busca do produto com o código no formato da interface
                produtoSelecionado = FakeBancoDeDados.consultaProdutCod(cod);
                
                //avaliamos se existe o produto com o código informado
                if(produtoSelecionado != null){
                    //atualizamos os campos com os dados do produto
                    nome.setText(produtoSelecionado.getNome());
                    precouni.setText(produtoSelecionado.getPreco()+ " ");
                    quantidade.setEnabled(true);
                }else{
                    //não cadastrado
                    JOptionPane.showMessageDialog(null, "Produto não cadastrado", 
                        "Código", JOptionPane.WARNING_MESSAGE);
                }
                
                
            }catch (NumberFormatException ex){
                JOptionPane.showMessageDialog(null, "O código deve ser um valor numérico", 
                        "Erro no Código", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_codigoKeyTyped

    private void quantidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantidadeKeyReleased
        // TODO add your handling code here:
         //Vai informar a quantidade de produtos 
        //Cálculo parcial dos produtos
        if(!quantidade.getText().isEmpty()){
            try{
                int quant = Integer.parseInt(quantidade.getText());

                double parc = produtoSelecionado.getPreco() * quant;
                precouni.setText(String.format("%.2f", parc));

            }catch(NumberFormatException ex){
                precouni.setText("N/A");
            }
        }else{
            //Campo da quantidade sem informação
            precouni.setText("N/A");
            
        }
    }//GEN-LAST:event_quantidadeKeyReleased

    private void precouniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precouniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_precouniActionPerformed

    private void botaoAddProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAddProdutoActionPerformed
        // TODO add your handling code here:
        if(produtoSelecionado != null && !precouni.getText().equals("N/A")){
            //produto está pronto para ser adicionado na tabela
            
            int quant = Integer.parseInt(quantidade.getText());
            if(quant <= produtoSelecionado.getQuantidade()){
                
                Produto vendido = new Produto(produtoSelecionado.getCodigo(),
                        produtoSelecionado.getNome(), 
                        produtoSelecionado.getPreco(),
                        quant);
                
                //produtoSelecionado.setQuantidade(produtoSelecionado.getQuantidade() - quant);
                
                //aqui estamos atualizando o valor total da compra
                precoCompra += produtoSelecionado.getPreco() * quant;
                precototal.setText(String.format("%.2f", precoCompra));
                
                
                //limpando as informações para que um novo produto seja informado
                codigo.setText("");
                quantidade.setText("1");
                precouni.setText("");
                produtoSelecionado = null;
                quantidade.setEnabled(false);
                nome.setText("");
                
               
                //add produto vendido á tabela
                
                this.carrinhoComprasTab.addNovoProduto(vendido);
                tabelaCarrinho.updateUI();
                
            }else{
                JOptionPane.showMessageDialog(null, "Não há quantidade suficiente para realizar a venda deste produto",
                        "Quantidade Insuficiente", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "A quantidade informada deve ser um valor numérico",
                        "Entrada de quantidade inválida", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_botaoAddProdutoActionPerformed

    private void botaoRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRemoverActionPerformed
        // TODO add your handling code here:
        
        int linha = tabelaCarrinho.getSelectedRow();
        
        if(linha> -1){
            //ok posso remover o produto
            int op = JOptionPane.showConfirmDialog(null, "Desejo remover o produto selecionado",
                    "Confirmação de exclusão", JOptionPane.YES_NO_OPTION);
            
            if(op == JOptionPane.YES_OPTION){
                //remover o produto e atualizar 
                
                String senha = JOptionPane.showInputDialog(null, "Informe a senha do gerente",
                        "operação restrita", JOptionPane.INFORMATION_MESSAGE);
                
                if(senha != null && senha.equals("ifmg")){
                    carrinhoComprasTab.removeProdutoCarrinho(linha);
                    atualizaQuantidades();
                }
            }
        }else{
            //produto não selecionado para remoção 
            JOptionPane.showMessageDialog(null, "Primeiro é preciso selecionar algum produto", 
                    "Selecionar!!!", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_botaoRemoverActionPerformed

    private boolean verificaQuantidades(){
        Vector<Produto> produtos = carrinhoComprasTab.produtosCarrinho();
        
        for(int i= 0; i < produtos.size(); i++){
            Produto estoque = FakeBancoDeDados.consultaProdutCod(produtos.get(i).getCodigo());
            if(produtos.get(i).getQuantidade() > estoque.getQuantidade()){
                JOptionPane.showMessageDialog(null, "A quantidade do produto " + estoque.getNome() + 
                        "não é suficiente para realizar a venda", 
                         "Quantidade Insuficiente", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }
        }
        return true;
    }
    
    private void botaoFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFinalizarActionPerformed
        
        //Verificar se temos as quantidades de produtos que estão sendo vendidos 
        if(verificaQuantidades() == true){
            //atualizar o nosso banco de dados fake(memória RAM)
            Vector<Produto> produtos = carrinhoComprasTab.produtosCarrinho();
            
            for(int i = 0; i < produtos.size(); i++){
                Produto estoque = FakeBancoDeDados.consultaProdutCod(produtos.get(i).getCodigo());
                estoque.setQuantidade(estoque.getQuantidade() - produtos.get(i).getQuantidade());
            }
            
            //zerando o valor total para a próxima compra
            precoCompra = 0.0;
            precototal.setText("0.00");
        
            //remover os produtos do carrinho de compra
            carrinhoComprasTab.limpaCarrinho();
            tabelaCarrinho.updateUI();
        
        }
        
    }//GEN-LAST:event_botaoFinalizarActionPerformed

    public void atualizaQuantidades(){
        //atualiza as informações da tabela
        tabelaCarrinho.updateUI();
        
        //atualizamos o valor da compra com os produtos do carrinho
        double preco = carrinhoComprasTab.calculaPrecoParcialCompra();
        
        precototal.setText(String.format("%.2f", preco));
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAddProduto;
    private javax.swing.JButton botaoEstoque;
    private javax.swing.JButton botaoFinalizar;
    private javax.swing.JButton botaoRemover;
    private javax.swing.JTextField codigo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nome;
    private javax.swing.JTextField precototal;
    private javax.swing.JTextField precouni;
    private javax.swing.JTextField quantidade;
    private javax.swing.JTable tabelaCarrinho;
    // End of variables declaration//GEN-END:variables
}
